/* Modern Modal Styles - Enhanced for sleek appearance */

.modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, 
        rgba(var(--primary-rgb, 0, 0, 0), 0.4) 0%, /* Using primary-rgb for consistency, fallback to black */
        rgba(var(--primary-rgb, 0, 0, 0), 0.6) 100%);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1050;
    padding: 20px; /* Consider a variable if global padding scale exists */
    box-sizing: border-box;
    animation: modalBackdropFadeIn 0.2s ease-out;
    overflow-y:hidden;
}

@keyframes modalBackdropFadeIn {
    from {
        opacity: 0;
        backdrop-filter: blur(0px);
        -webkit-backdrop-filter: blur(0px);
    }
    to {
        opacity: 1;
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
    }
}

.modal-content {
    background: var(--card-background-color, #ffffff);
    padding: 32px 40px; /* Consider variables for padding */
    border-radius: var(--border-radius-lg, 12px); /* Using existing variable, adjust if 16px is preferred */
    box-shadow: var(--box-shadow-md, 0 5px 10px rgba(0,0,0,0.07)); /* Using existing shadow, adjust if heavier is needed */
    min-width: 320px;
    max-width: 520px;
    width: 100%;
    max-height: 90vh;
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: column;
    border: 1px solid var(--border-color, rgba(0, 0, 0, 0.1));
    animation: modalContentSlideIn 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    transform-origin: center;
}

@keyframes modalContentSlideIn {
    from {
        opacity: 0;
        transform: scale(0.9) translateY(-20px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

.modal-close-button {
    position: absolute;
    top: 16px;
    right: 20px;
    background: rgba(var(--secondary-accent-rgb, 0,0,0), 0.08); /* Using a neutral theme color */
    border: none;
    font-size: 1.4rem;
    font-weight: 600;
    color: var(--text-muted-color, #666666);
    cursor: pointer;
    padding: 8px;
    line-height: 1;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
}

.modal-close-button:hover {
    color: var(--text-color, #333333);
    background: rgba(var(--secondary-accent-rgb, 0,0,0), 0.12);
    transform: scale(1.1);
}

.modal-close-button:active {
    transform: scale(0.95);
}

.modal-content h2 {
    margin-top: 0;
    margin-bottom: 24px;
    font-size: 1.5rem; /* Consider theme variable for heading size */
    font-weight: 700;
    color: var(--text-heading-color, #1a1a1a) !important; /* Added !important for diagnostics */
    padding-bottom: 16px;
    border-bottom: 2px solid var(--border-color, rgba(0, 0, 0, 0.1));
    position: relative;
    overflow-y:hidden;
}

.modal-content h2:after {
    content: '';
    position: absolute;
    bottom: 0px; /* Aligns with the border-bottom */
    left: 0;
    width: 40px;
    height: 2px;
    background: linear-gradient(135deg, var(--primary-color, #197c9a) 0%, var(--primary-dark-color, #0f4c6e) 100%);
    border-radius: 1px;
}

.modal-body {
    margin-bottom: 32px;
    line-height: 1.7;
    color: var(--text-color, #333333) !important; /* Added !important for diagnostics */
    flex-grow: 1;
    font-size: 1rem; /* Consider theme variable for body text size */
}

.modal-body p {
    margin-top: 0;
    margin-bottom: 16px;
    color: var(--text-color, #333333) !important; /* Added !important for diagnostics */
}

.modal-body p:last-child {
    margin-bottom: 0;
}

.modal-body strong {
    color: var(--text-heading-color, #1a1a1a); /* Or var(--dark-color) */
    font-weight: 600;
}


.modal-actions {
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    margin-top: auto;
    padding-top: 24px;
    border-top: 2px solid var(--border-color-light, rgba(0, 0, 0, 0.05)); /* Using a lighter border if available */
}

/* Aligning modal buttons with global .btn styles from App.css */
/* Assuming .btn in App.css provides base styling (font, transitions, etc.) */
/* These styles will primarily set colors and specific modal button appearances */

.modal-actions .btn {
    min-width: 100px;
    padding: 12px 24px; /* Check if this aligns with global .btn or if .btn-lg/.btn-sm is used */
    border-radius: var(--border-radius-md, 8px);
    font-weight: 600;
    font-size: 0.95rem;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1); /* Ensure this matches global .btn transition */
    border: 2px solid transparent; /* Global .btn might handle this */
    cursor: pointer;
    position: relative;
    overflow: hidden;
}

/* The :before pseudo-element for hover effects should ideally come from global .btn if it has one */
.modal-actions .btn:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
    opacity: 0;
    transition: opacity 0.2s ease;
}

.modal-actions .btn:hover:before {
    opacity: 1;
}

.modal-actions .btn:hover {
    transform: translateY(-1px);
    box-shadow: var(--box-shadow-sm, 0 2px 4px rgba(0,0,0,0.05)); /* Using a lighter shadow for buttons */
}

.modal-actions .btn:active {
    transform: translateY(0);
}

.modal-actions .btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
    box-shadow: none !important;
}

.modal-actions .btn:disabled:before {
    opacity: 0 !important;
}

/* Responsive Design */
@media (max-width: 640px) {
    .modal-backdrop {
        padding: 16px;
    }
    
    .modal-content {
        padding: 24px 20px;
        border-radius: var(--border-radius-md, 8px); /* Slightly smaller radius for smaller screens */
        min-width: unset;
        width: 100%;
    }
    
    .modal-content h2 {
        font-size: 1.3rem;
        margin-bottom: 20px;
        padding-bottom: 12px;
    }
    
    .modal-actions {
        flex-direction: column-reverse;
        gap: 8px;
    }
    
    .modal-actions .btn {
        width: 100%;
        min-width: unset;
    }
}

/* Animation for mobile devices with reduced motion preference */
@media (prefers-reduced-motion: reduce) {
    .modal-backdrop,
    .modal-content,
    .modal-close-button,
    .modal-actions .btn {
        animation: none;
        transition: none;
    }
}

/* Dark mode support */
/* Assuming App.css handles dark mode variable switches */
@media (prefers-color-scheme: dark) {
    .modal-backdrop {
        background: linear-gradient(135deg, 
            rgba(var(--primary-rgb, 0,0,0), 0.6) 0%, /* Darker backdrop for dark mode */
            rgba(var(--primary-rgb, 0,0,0), 0.8) 100%);
    }
    
    .modal-content h2 {
        color: var(--text-on-dark, #ffffff); /* Ensure heading text is light in dark mode */
        border-bottom-color: rgba(255, 255, 255, 0.15); /* Lighter border for dark mode */
    }
    
    .modal-body,
    .modal-body p {
        color: var(--text-on-dark, #e0e0e0); /* Lighter text for dark mode body */
    }
    
    .modal-body strong {
        color: var(--text-on-dark, #ffffff);
    }
    
    .modal-close-button {
        background: rgba(255, 255, 255, 0.1); /* Lighter background for dark mode */
        color: var(--text-muted-color, #cccccc); /* Ensure icon is visible */
    }
    .modal-close-button:hover {
        background: rgba(255, 255, 255, 0.2);
        color: var(--text-on-dark, #ffffff);
    }
    
    .modal-content h2:after {
         background: linear-gradient(135deg, var(--primary-accent-color, #0ea5e9) 0%, var(--secondary-accent-color, #64748b) 100%); /* Adjusted gradient for dark mode */
    }
}

/* Focus styles for accessibility */
.modal-close-button:focus,
.modal-actions .btn:focus {
    outline: 2px solid var(--primary-color, #007bff);
    outline-offset: 2px;
}

/* Enhanced button states - these should align with or use App.css's .btn-primary, .btn-secondary etc. */
.modal-actions .btn-primary {
    background: linear-gradient(135deg, var(--primary-color, #007bff) 0%, var(--primary-dark-color, #0056b3) 100%);
    color: var(--text-on-primary, white);
    border-color: var(--primary-color, #007bff); /* Or transparent if global .btn handles borders differently */
}

.modal-actions .btn-secondary {
    background: linear-gradient(135deg, var(--button-secondary-bg, #f8f9fa) 0%, var(--button-secondary-hover-bg, #e9ecef) 100%);
    color: var(--button-secondary-text, var(--text-color));
    border-color: var(--border-color, #dee2e6);
}

.modal-actions .btn-danger {
    background: linear-gradient(135deg, var(--danger-color, #dc3545) 0%, var(--danger-dark-color, #c82333) 100%);
    color: var(--text-on-dark, white); /* Assuming danger buttons have dark text on them */
    border-color: var(--danger-color, #dc3545);
}