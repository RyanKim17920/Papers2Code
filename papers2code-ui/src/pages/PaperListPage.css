/* Filter sidebar styling */
.filter-card {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  border: 1px solid var(--border-color);
}

/* Header area for filter card: keep neutral background and add subtle divider */
.filter-header {
  background: transparent;
  color: var(--text-color);
  padding: 1rem 1.5rem;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
  margin: 0;
  border-bottom: 1px solid var(--border-color);
}

.filter-header span {
  color: var(--text-color);
  font-size: 1rem;
  font-weight: 600;
}

/* Circular accent behind the Filter icon (similar visual language to other toggles) */
.filter-header .icon-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  border-radius: 9999px;
  background-color: var(--primary-light-color, #e8f7fa);
  color: var(--primary-color, #197c9a);
  border: 1px solid var(--border-color, #e9ecef);
}

.filter-content {
  padding: 1.5rem;
  overflow: hidden; /* prevent content from spilling during slide animation */
}

/* Fade/slide animation for content when revealing sidebar */
.filter-sidebar.visible .filter-content {
  animation: sidebarContentSlideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.filter-sidebar.hidden .filter-content {
  animation: sidebarContentSlideOut 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes sidebarContentSlideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes sidebarContentSlideOut {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-20px);
  }
}

/* Animation for handle when sidebar is closing */
.filter-sidebar.hidden .filter-toggle-handle {
  animation: toggleHandleSlideOut 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes toggleHandleSlideOut {
  from {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateX(-10px) scale(0.9);
  }
}

/* Staggered animation for filter sections */
.filter-sidebar.visible .filter-content > div:nth-child(1) {
  animation: filterSectionSlideIn 0.5s cubic-bezier(0.4, 0, 0.2, 1) 0.1s both;
}

.filter-sidebar.visible .filter-content > div:nth-child(2) {
  animation: filterSectionSlideIn 0.5s cubic-bezier(0.4, 0, 0.2, 1) 0.15s both;
}

.filter-sidebar.visible .filter-content > div:nth-child(3) {
  animation: filterSectionSlideIn 0.5s cubic-bezier(0.4, 0, 0.2, 1) 0.2s both;
}

.filter-sidebar.visible .filter-content > div:nth-child(4) {
  animation: filterSectionSlideIn 0.5s cubic-bezier(0.4, 0, 0.2, 1) 0.25s both;
}

@keyframes filterSectionSlideIn {
  from {
    opacity: 0;
    transform: translateY(8px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.filter-content > * + * {
  margin-top: 1.5rem;
}

/* Enhanced spacing for main content */
.main-content {
  padding-top: 0.5rem;
}

.main-content .space-y-3 > * + * {
  margin-top: 1rem !important;
}

/* Animation styles for filter toggle */
.paper-list-layout {
  display: flex;
  gap: 1.5rem;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.paper-list-layout.with-filters {
  grid-template-columns: 320px 1fr;
}

.paper-list-layout.no-filters {
  grid-template-columns: 0 1fr;
}

.filter-sidebar {
  width: 320px;
  flex-shrink: 0;
  overflow: visible; /* allow handle to show outside bounds */
  position: relative; /* anchor for absolute handle */
  z-index: 1; /* stay above adjacent content borders */
  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.3s ease;
}

.filter-sidebar.visible {
  opacity: 1;
  transform: translateX(0);
}

.filter-sidebar.hidden {
  opacity: 0;
  transform: translateX(-100%);
  pointer-events: none; /* prevent interaction when hidden */
  width: 0; /* ensure it takes no space when hidden */
}

.main-content {
  flex: 1;
  min-width: 0;
  width: 100%;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced card expansion when filters are hidden */
.paper-list-layout.no-filters .main-content {
  max-width: 100%;
}

.paper-list-layout.with-filters .main-content {
  max-width: calc(100% - 320px - 1.5rem);
}

/* Side handles for collapsing/revealing the filter sidebar (desktop) */
.filter-toggle-handle {
  position: absolute;
  top: 16px;
  right: -14px;
  width: 28px;
  height: 28px;
  border-radius: 9999px;
  background-color: var(--card-background-color, #ffffff);
  color: var(--text-color, #212529);
  border: 1px solid var(--border-color, #e9ecef);
  box-shadow: 0 1px 2px rgba(0,0,0,0.05);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 2;
  animation: toggleHandleSlideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1) 0.2s both;
}

.filter-toggle-handle:hover {
  background-color: var(--primary-light-color, #e8f7fa);
  border-color: var(--primary-color, #197c9a);
  color: var(--primary-color, #197c9a);
  transform: scale(1.05) translateX(-2px);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.filter-reveal-handle {
  width: 32px;
  height: 32px;
  border-radius: 9999px;
  background-color: var(--card-background-color, #ffffff);
  color: var(--text-color, #212529);
  border: 1px solid var(--border-color, #e9ecef);
  box-shadow: 0 1px 2px rgba(0,0,0,0.05);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  animation: revealHandleBounceIn 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.1s both;
}

.filter-reveal-handle:hover {
  background-color: var(--primary-light-color, #e8f7fa);
  border-color: var(--primary-color, #197c9a);
  color: var(--primary-color, #197c9a);
  transform: scale(1.05) translateX(2px);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

@keyframes toggleHandleSlideIn {
  from {
    opacity: 0;
    transform: translateX(10px) scale(0.8);
  }
  to {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
}

@keyframes revealHandleBounceIn {
  from {
    opacity: 0;
    transform: translateX(-10px) scale(0.8);
  }
  60% {
    opacity: 1;
    transform: translateX(2px) scale(1.05);
  }
  to {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
}
  .paper-list-page h1 {
      text-align: center;
      font-size: 2em; /* Larger heading */
      font-weight: 600;
      color: var(--text-heading-color); /* Use heading color */
      border-bottom: 1px solid var(--border-color);
      padding-bottom: 15px;
      width: 100%; 
  }
  
  /* Container for the cards */
  .paper-list {
    width: 100%; 
    max-width: 1400px; /* <-- Add max-width (adjust value as needed) */
    margin-left: auto;  /* <-- Add auto margin for centering */
    margin-right: auto; /* <-- Add auto margin for centering */
    margin-top: 25px;
    display: flex;
    flex-wrap: wrap;
    gap: 30px; /* Slightly larger gap for visual separation */
    justify-content: flex-start; /* Keep items aligned left within the container */
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.3s ease;
  }  /* Styling for when no papers are found */
  .paper-list > p { /* Target direct p child */
      width: 100%;
      text-align: center;
      color: var(--text-muted-color);
      font-size: 1.1em;
      padding: 50px 0; /* More padding */
  }

  .list-content-area {
    /* This container will hold either the spinner, error, or the list */
    min-height: 40vh; /* Still good to have a minimum */
    display: flex;
    flex-direction: column;
    /* --- ADD THIS --- */
    flex-grow: 1; /* Make this container expand vertically */
    /* Default alignment (when list is shown) */
    justify-content: center;
    align-items: stretch;
  }
  
  .list-content-area.loading {
    width: 100%;
    max-width: 100%;
    margin-left: 0;
  }
  /* Optional: Style loading spinner if needed globally */
  /* Moved spinner style to its own CSS, ensure it looks okay */
  /* .loading-spinner { ... } */
  
  /* Ensure error message is not overly constrained by flex centering */
  .list-content-area .error-message {
      /* Keep global styles, but ensure it doesn't shrink in flex context */
      max-width: 800px;
      width: 90%; /* Allow some flexibility */
      margin: 20px auto; /* Center error message itself */
  }

  
  .list-header h1 {
    text-align: center;
    font-size: 2.5em;
    font-weight: 600;
    color: var(--text-heading-color);
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 15px;
  }
  
  .list-controls-wrapper {
    margin-bottom: 10px; /* Reduce margin if advanced form adds its own */
  }

  .list-controls {
    display: flex;
    gap: 20px; /* Space between search and sort */
    align-items: center; /* Vertically align items */
    flex-wrap: wrap; /* Allow controls to wrap on smaller screens */
    margin-bottom: 25px; /* Space below controls */
  }
  
  /* Give search bar flexible width */
  .list-controls .search-bar-container {
    flex: 1 1 400px; /* Allow grow, shrink, base width */
    margin-bottom: 0; /* Remove margin if handled by gap */
    min-width: 250px; /* Prevent excessive shrinking */
  }
  
  .sort-and-advanced {
    display: flex;
    gap: 15px; /* Space between sort and advanced button */
    align-items: center; /* Vertically align items in this group */
    flex-shrink: 0; /* Prevent this group from shrinking */
  }

  .sort-control {
    display: flex;
    align-items: center;
    gap: 8px; /* Space between label and select */
    flex-shrink: 0; /* Prevent sort control from shrinking */
  }
  
  .sort-control label {
    font-size: 0.95em;
    color: var(--text-muted-color);
    font-weight: 500;
    white-space: nowrap; /* Prevent label wrap */
  }
  
  .sort-control select {
    padding: 8px 12px;
    font-size: 0.95em;
    font-family: inherit;
    color: var(--text-color);
    background-color: var(--card-background-color);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md);
    cursor: pointer;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
  }
  
  .sort-control select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.2); /* Use RGB variable */
    box-sizing: border-box;
  }

  .btn-advanced-toggle {
    padding: 8px 15px; /* Match select padding */
    height: 40px; /* Match select height approx */
    overflow-y: hidden;
    box-sizing: border-box;
    white-space: nowrap; /* Prevent text wrapping */
    color: #212529 !important; /* Force dark text for good contrast */
    font-weight: 500; /* Make text slightly bolder for readability */
  }

/* Container that holds all pagination controls (prev, pages, next, go-to) */
.pagination-container {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 1rem;
  margin-top: 2rem;
  justify-content: center; /* center horizontally */
}

/* Generic style for prev/next buttons */
.nav-button {
  background-color: var(--card-background-color, #ffffff); /* Use variable */
  color: var(--text-color, #212529); /* Use variable */
  border: 1px solid var(--border-color, #e9ecef); /* Use variable */
  padding: 0.45rem 0.8rem;
  border-radius: var(--border-radius-sm, 4px); /* Use variable */
  cursor: pointer;
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
  font-size: 0.9rem; 
  font-weight: 500; 
}

.nav-button:hover:not(:disabled) {
  background-color: var(--primary-light-color, #e8f7fa);
  border-color: var(--primary-color, #197c9a); 
  color: var(--primary-color, #197c9a);
}
.nav-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* The container for numeric pages, so we can style them consistently */
.page-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
}

/* Each page button */
.page-btn {
  background-color: var(--card-background-color, #ffffff); /* Use variable */
  color: var(--text-color, #212529); /* Use variable */
  border: 1px solid var(--border-color, #e9ecef); /* Use variable */
  padding: 0.45rem 0.8rem;
  border-radius: var(--border-radius-sm, 4px); /* Use variable */
  cursor: pointer;
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease; 
  font-size: 0.9rem;
}

/* Hover effect */
.page-btn:hover:not(:disabled) { /* Added :not(:disabled) for consistency */
  background-color: var(--primary-light-color, #e8f7fa);
  border-color: var(--primary-color, #197c9a); 
  color: var(--primary-color, #197c9a);
}
/* Active (current) page uses a bold accent color */
.page-btn.active {
  background-color: var(--primary-color, #197c9a); /* Use primary color */
  border-color: var(--primary-color, #197c9a); /* Use primary color */
  color: var(--text-on-primary, #ffffff); /* Use text-on-primary */
  font-weight: 600;
}

/* Ellipsis between pages */
.page-ellipsis {
  padding: 0.45rem 0.8rem;
  color: var(--text-muted-color, #6c757d); /* Use variable */
  user-select: none;
  font-size: 0.9rem;
}

/* "Go to page" container */
.go-to-page {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  font-size: 0.9rem;
}

.go-to-input-wrapper {
  position: relative; /* Needed for absolute positioning of error */
  display: flex;
  align-items: center;
  gap: 0.3rem; /* Small gap between input and button */
}

/* The numeric input for user to type a page */
.go-to-page input {
  width: 60px;
  background-color: var(--card-background-color, #ffffff); /* Standard input background */
  color: var(--text-color, #212529); /* Standard text color */
  border: 1px solid var(--border-color, #e9ecef); /* Use variable */
  border-radius: var(--border-radius-sm, 4px); /* Use variable */
  padding: 0.3rem 0.5rem;
  font-size: 0.9rem;
  text-align: center; 
  -moz-appearance: textfield;
  appearance: textfield; /* Standard property */
}

.go-to-page input::-webkit-outer-spin-button,
.go-to-page input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.go-to-page input[aria-invalid="true"] {
  border-color: var(--danger-color, #dc3545); /* Use variable */
  box-shadow: 0 0 0 1px var(--danger-color, #dc3545); /* Use variable */
}

.go-to-page input:focus {
  border-color: var(--primary-color, #197c9a); /* Use variable */
  outline: none;
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb, 25, 124, 154), 0.2); /* Use variable */
}

/* The "Go" button */
.go-btn {
  padding: 0.3rem 0.7rem;
  font-size: 0.9rem;
  background-color: var(--primary-color, #197c9a); /* Use variable */
  color: var(--text-on-primary, #ffffff); /* Use variable */
  border: none; /* Assuming buttons generally might have borders, explicitly none here if intended */
  border-radius: var(--border-radius-sm, 4px); /* Use variable */
  cursor: pointer;
  transition: background-color 0.2s ease;
}
.go-btn:hover:not(:disabled) { /* Added :not(:disabled) */
  background-color: var(--primary-dark-color, #0f4c6e); /* Use the darker primary color */
}

.page-input-error {
  position: absolute;
  bottom: calc(100% + 5px); 
  left: 0; 
  width: max-content; 
  max-width: 220px; 
  background-color: var(--danger-color, #dc3545); /* Use variable */
  color: var(--text-on-dark, white); /* Use variable, assuming danger has dark bg */
  font-size: 0.8em;
  font-weight: 500; 
  padding: 4px 8px; 
  border-radius: var(--border-radius-sm, 4px); /* Use variable */
  z-index: 10;
  opacity: 1; 
  pointer-events: none; 
}